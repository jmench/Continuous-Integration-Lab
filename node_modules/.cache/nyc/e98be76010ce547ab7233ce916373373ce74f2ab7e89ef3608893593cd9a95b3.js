var cov_1pvenvv1u5=function(){var path="/Users/jmench/dev/cs498/src/test/cases/app_test.js";var hash="a6493bc5d03fd063cf979e08e1ba47356ace58e0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/jmench/dev/cs498/src/test/cases/app_test.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:35}},"1":{start:{line:2,column:16},end:{line:2,column:36}},"2":{start:{line:4,column:12},end:{line:4,column:37}},"3":{start:{line:6,column:0},end:{line:18,column:2}},"4":{start:{line:8,column:4},end:{line:16,column:6}},"5":{start:{line:10,column:25},end:{line:10,column:52}},"6":{start:{line:13,column:8},end:{line:13,column:49}},"7":{start:{line:15,column:8},end:{line:15,column:54}},"8":{start:{line:20,column:0},end:{line:32,column:2}},"9":{start:{line:22,column:4},end:{line:30,column:6}},"10":{start:{line:24,column:25},end:{line:24,column:55}},"11":{start:{line:27,column:8},end:{line:27,column:49}},"12":{start:{line:29,column:8},end:{line:29,column:60}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:20},end:{line:6,column:21}},loc:{start:{line:6,column:32},end:{line:18,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:8,column:22},end:{line:8,column:23}},loc:{start:{line:8,column:34},end:{line:16,column:5}},line:8},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:23},end:{line:20,column:24}},loc:{start:{line:20,column:35},end:{line:32,column:1}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:22,column:22},end:{line:22,column:23}},loc:{start:{line:22,column:34},end:{line:30,column:5}},line:22}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a6493bc5d03fd063cf979e08e1ba47356ace58e0"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{expect}=(cov_1pvenvv1u5.s[0]++,require('../chai'));const request=(cov_1pvenvv1u5.s[1]++,require('supertest'));const app=(cov_1pvenvv1u5.s[2]++,require('../../main/app'));cov_1pvenvv1u5.s[3]++;describe('GET - /',async()=>{cov_1pvenvv1u5.f[0]++;cov_1pvenvv1u5.s[4]++;it('returns 200',async()=>{cov_1pvenvv1u5.f[1]++;// make a GET request on the app for the url '/'
const response=(cov_1pvenvv1u5.s[5]++,await request(app).get('/'));// check the HTTP status code
cov_1pvenvv1u5.s[6]++;expect(response.statusCode).to.equal(200);// check the raw text returned
cov_1pvenvv1u5.s[7]++;expect(response.text).to.equal('Hello World!');});});cov_1pvenvv1u5.s[8]++;describe('GET - /new',async()=>{cov_1pvenvv1u5.f[2]++;cov_1pvenvv1u5.s[9]++;it('returns 200',async()=>{cov_1pvenvv1u5.f[3]++;// make a GET request on the app for the url '/'
const response=(cov_1pvenvv1u5.s[10]++,await request(app).get('/new'));// check the HTTP status code
cov_1pvenvv1u5.s[11]++;expect(response.statusCode).to.equal(200);// check the raw text returned
cov_1pvenvv1u5.s[12]++;expect(response.text).to.equal('A whole new world!');});});